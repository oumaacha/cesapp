// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using cesapp.Context;

#nullable disable

namespace cesapp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230928210009_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("cesapp.Models.Chantier", b =>
                {
                    b.Property<int>("ChantierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChantierId"));

                    b.Property<double>("Budget")
                        .HasColumnType("double precision");

                    b.Property<string>("ChantierName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DossierId")
                        .HasColumnType("integer");

                    b.Property<int>("LocalisationId")
                        .HasColumnType("integer");

                    b.Property<int>("Progres")
                        .HasColumnType("integer");

                    b.HasKey("ChantierId");

                    b.HasIndex("DossierId");

                    b.HasIndex("LocalisationId");

                    b.ToTable("Chantiers");
                });

            modelBuilder.Entity("cesapp.Models.ChefLieu", b =>
                {
                    b.Property<int>("LieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LieuId"));

                    b.Property<string>("LieuName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LieuId");

                    b.ToTable("ChefLieux");
                });

            modelBuilder.Entity("cesapp.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<string>("ClientAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("cesapp.Models.Consommation", b =>
                {
                    b.Property<int>("ConsommationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConsommationId"));

                    b.Property<int>("ConsommationTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MachineId")
                        .HasColumnType("integer");

                    b.Property<decimal>("MontantEnDh")
                        .HasColumnType("numeric");

                    b.Property<int>("OperateurId")
                        .HasColumnType("integer");

                    b.HasKey("ConsommationId");

                    b.HasIndex("ConsommationTypeId")
                        .IsUnique();

                    b.HasIndex("MachineId")
                        .IsUnique();

                    b.HasIndex("OperateurId")
                        .IsUnique();

                    b.ToTable("Consommations");
                });

            modelBuilder.Entity("cesapp.Models.ConsommationType", b =>
                {
                    b.Property<int>("ConsommationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConsommationTypeId"));

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ConsommationTypeId");

                    b.ToTable("ConsommationsType");
                });

            modelBuilder.Entity("cesapp.Models.Dossier", b =>
                {
                    b.Property<int>("DossierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DossierId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOuv")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DossierNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Objet")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ResponsableId")
                        .HasColumnType("integer");

                    b.HasKey("DossierId");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.HasIndex("ResponsableId");

                    b.ToTable("Dossiers");
                });

            modelBuilder.Entity("cesapp.Models.Fournisseur", b =>
                {
                    b.Property<int>("FournisseurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FournisseurId"));

                    b.Property<string>("FournisseurName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FournisseurId");

                    b.ToTable("Fournisseurs");
                });

            modelBuilder.Entity("cesapp.Models.Localisation", b =>
                {
                    b.Property<int>("LocalisationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocalisationId"));

                    b.Property<int>("PrefectureId")
                        .HasColumnType("integer");

                    b.Property<double>("X")
                        .HasColumnType("double precision");

                    b.Property<double>("Y")
                        .HasColumnType("double precision");

                    b.HasKey("LocalisationId");

                    b.HasIndex("PrefectureId")
                        .IsUnique();

                    b.ToTable("Localisations");
                });

            modelBuilder.Entity("cesapp.Models.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MachineId"));

                    b.Property<int?>("ChantierId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAcquisition")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("integer");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Nfacture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OperateurId")
                        .HasColumnType("integer");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("boolean");

                    b.Property<int>("situation")
                        .HasColumnType("integer");

                    b.HasKey("MachineId");

                    b.HasIndex("ChantierId");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("OperateurId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("cesapp.Models.MachineType", b =>
                {
                    b.Property<int>("MachineTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MachineTypeId"));

                    b.Property<string>("MachineTypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("MachineTypeId");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("cesapp.Models.Operateur", b =>
                {
                    b.Property<int>("OperateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OperateurId"));

                    b.Property<string>("OperateurName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperateurPhone")
                        .HasColumnType("text");

                    b.Property<bool>("isAvailable")
                        .HasColumnType("boolean");

                    b.HasKey("OperateurId");

                    b.ToTable("Operateurs");
                });

            modelBuilder.Entity("cesapp.Models.Prefecture", b =>
                {
                    b.Property<int>("PrefectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PrefectureId"));

                    b.Property<int>("ChefLieuId")
                        .HasColumnType("integer");

                    b.Property<string>("PrefectureName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrefectureId");

                    b.HasIndex("ChefLieuId");

                    b.ToTable("Prefectures");
                });

            modelBuilder.Entity("cesapp.Models.Responsable", b =>
                {
                    b.Property<int>("ResponsableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ResponsableId"));

                    b.Property<string>("CodeTelephone")
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroTelephone")
                        .HasColumnType("text");

                    b.Property<string>("ResponsableFName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResponsableLName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ResponsableId");

                    b.ToTable("Responsables");
                });

            modelBuilder.Entity("cesapp.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("cesapp.Models.Rondement", b =>
                {
                    b.Property<int>("RondmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RondmentId"));

                    b.Property<decimal>("CPT_En_MetreLineaire")
                        .HasColumnType("numeric");

                    b.Property<int?>("ChantierId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EssaiPressiometrique")
                        .HasColumnType("integer");

                    b.Property<int>("MachineId")
                        .HasColumnType("integer");

                    b.Property<int>("OperateurId")
                        .HasColumnType("integer");

                    b.Property<decimal>("SC_En_Metre")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SD_En_Metre")
                        .HasColumnType("numeric");

                    b.Property<int>("SPT")
                        .HasColumnType("integer");

                    b.HasKey("RondmentId");

                    b.HasIndex("ChantierId")
                        .IsUnique();

                    b.HasIndex("MachineId")
                        .IsUnique();

                    b.HasIndex("OperateurId")
                        .IsUnique();

                    b.ToTable("Rondements");
                });

            modelBuilder.Entity("cesapp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastConnection")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("cesapp.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkerId"));

                    b.Property<int>("OperateurId")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WorkerId");

                    b.HasIndex("OperateurId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("cesapp.Models.Chantier", b =>
                {
                    b.HasOne("cesapp.Models.Dossier", "Dossier")
                        .WithMany("Chantiers")
                        .HasForeignKey("DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cesapp.Models.Localisation", "Localisation")
                        .WithMany()
                        .HasForeignKey("LocalisationId");

                    b.Navigation("Dossier");

                    b.Navigation("Localisation");
                });

            modelBuilder.Entity("cesapp.Models.Consommation", b =>
                {
                    b.HasOne("cesapp.Models.ConsommationType", "consommationType")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Consommation", "ConsommationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cesapp.Models.Machine", "Machine")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Consommation", "MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cesapp.Models.Operateur", "Operateur")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Consommation", "OperateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("Operateur");

                    b.Navigation("consommationType");
                });

            modelBuilder.Entity("cesapp.Models.Dossier", b =>
                {
                    b.HasOne("cesapp.Models.Client", "Client")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Dossier", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cesapp.Models.Responsable", "Responsable")
                        .WithMany("Dossiers")
                        .HasForeignKey("ResponsableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("cesapp.Models.Localisation", b =>
                {
                    b.HasOne("cesapp.Models.Prefecture", "Prefecture")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Localisation", "PrefectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prefecture");
                });

            modelBuilder.Entity("cesapp.Models.Machine", b =>
                {
                    b.HasOne("cesapp.Models.Chantier", "Chantier")
                        .WithMany("Machines")
                        .HasForeignKey("ChantierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("cesapp.Models.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurId");

                    b.HasOne("cesapp.Models.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId");

                    b.HasOne("cesapp.Models.Operateur", "Operateur")
                        .WithMany()
                        .HasForeignKey("OperateurId");

                    b.Navigation("Chantier");

                    b.Navigation("Fournisseur");

                    b.Navigation("MachineType");

                    b.Navigation("Operateur");
                });

            modelBuilder.Entity("cesapp.Models.Prefecture", b =>
                {
                    b.HasOne("cesapp.Models.ChefLieu", "ChefLieu")
                        .WithMany("Prefectures")
                        .HasForeignKey("ChefLieuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChefLieu");
                });

            modelBuilder.Entity("cesapp.Models.Rondement", b =>
                {
                    b.HasOne("cesapp.Models.Chantier", "Chantier")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Rondement", "ChantierId");

                    b.HasOne("cesapp.Models.Machine", "Machine")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Rondement", "MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cesapp.Models.Operateur", "Operateur")
                        .WithOne()
                        .HasForeignKey("cesapp.Models.Rondement", "OperateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chantier");

                    b.Navigation("Machine");

                    b.Navigation("Operateur");
                });

            modelBuilder.Entity("cesapp.Models.User", b =>
                {
                    b.HasOne("cesapp.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("cesapp.Models.Worker", b =>
                {
                    b.HasOne("cesapp.Models.Operateur", "Operateur")
                        .WithMany("Workers")
                        .HasForeignKey("OperateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operateur");
                });

            modelBuilder.Entity("cesapp.Models.Chantier", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("cesapp.Models.ChefLieu", b =>
                {
                    b.Navigation("Prefectures");
                });

            modelBuilder.Entity("cesapp.Models.Dossier", b =>
                {
                    b.Navigation("Chantiers");
                });

            modelBuilder.Entity("cesapp.Models.MachineType", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("cesapp.Models.Operateur", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("cesapp.Models.Responsable", b =>
                {
                    b.Navigation("Dossiers");
                });

            modelBuilder.Entity("cesapp.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
